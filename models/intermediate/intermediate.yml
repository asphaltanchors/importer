version: 2

models:
  - name: int_quickbooks__order_items_typed
    description: >
      Intermediate model that handles type casting and data quality for order items
      before aggregation. Ensures proper data types for all fields.
    columns:
      - name: order_number
        description: Unique identifier for the order
        tests:
          - not_null
      
      - name: total_tax
        description: Total tax amount for the line item (properly cast to NUMERIC). NULL for individual line items, populated only for order header/summary rows.
      
      - name: product_service_amount
        description: Amount for the individual line item (properly cast to NUMERIC)
        tests:
          - not_null
      
      - name: total_amount
        description: Total amount for the order line (properly cast to NUMERIC). NULL for individual line items, populated only for order header/summary rows.
      
      - name: is_tax_exempt
        description: Boolean flag indicating if the item is tax exempt

  - name: int_quickbooks__orders
    description: >
      Intermediate model that aggregates order items to order level but still
      requires additional business logic to be applied.
    columns:
      - name: order_number
        description: Unique identifier for the order
        tests:
          - not_null
          - unique
      
      - name: customer
        description: Name of the customer who placed the order
      
      - name: order_date
        description: Date when the order was placed
        tests:
          - not_null
      
      - name: total_amount
        description: Total monetary value of the order
        tests:
          - not_null
      
      - name: is_tax_exempt
        description: Boolean flag indicating if the order is tax exempt
      
      - name: item_count
        description: Number of items in the order
        tests:
          - not_null

  - name: int_quickbooks__product_family
    description: >
      Intermediate model that derives product family from item attributes.
      It uses pattern matching on item_name and sales_description to assign product families.
      Ensures one row per item_name by selecting the most recent record.
    columns:
      - name: item_name
        description: Name of the item
        tests:
          - not_null
          - unique
      
      - name: sales_description
        description: Description of the item used for sales
      
      - name: product_family
        description: Derived product family based on item name and sales description patterns
        tests:
          - not_null

  - name: int_quickbooks__material_type
    description: >
      Intermediate model that derives material type from item attributes.
      It uses pattern matching on item_name to assign material types.
      Ensures one row per item_name by selecting the most recent record.
    columns:
      - name: item_name
        description: Name of the item
        tests:
          - not_null
          - unique
      
      - name: sales_description
        description: Description of the item used for sales
      
      - name: material_type
        description: Derived material type based on item_name patterns
        tests:
          - not_null

  - name: int_quickbooks__item_kits
    description: >
      Intermediate model that identifies which items are kits based on specific item_name patterns.
      Items with specific naming patterns or in a predefined list are flagged as kits.
      Ensures one row per item_name by selecting the most recent record.
    columns:
      - name: item_name
        description: Name of the item
        tests:
          - not_null
          - unique
      
      - name: item_type
        description: Type of the item (e.g., Inventory, Service)
      
      - name: item_subtype
        description: Subtype of the item (e.g., ItemInventory, ItemGroup)
      
      - name: is_kit
        description: Boolean flag indicating if the item is a kit (TRUE) or not (FALSE)
        tests:
          - not_null

  - name: int_quickbooks__customer_person_mapping
    description: >
      CRITICAL TESTING: Person-company mapping with email deduplication across customer records.
      WARNING: Contains unstable surrogate keys that include email_position, causing relationship breakage.
    columns:
      - name: person_company_id
        description: Unique relationship identifier between person and company
        tests:
          - unique
          - not_null
      
      - name: person_id
        description: "Contact ID from staging (WARNING: includes unstable email_position in hash)"
        tests:
          - not_null
      
      - name: company_domain_key
        description: Company domain key for consolidation
        tests:
          - not_null
          # Ensure no orphaned NO_EMAIL_DOMAIN records
          - dbt_utils.expression_is_true:
              expression: "company_domain_key != 'NO_EMAIL_DOMAIN'"
      
      - name: main_email
        description: "Person's email address (should be unique across all persons after deduplication)"
        tests:
          - not_null
          - unique  # CRITICAL: This tests the core email deduplication logic
      
      - name: contact_role
        description: Role classification for the contact
        tests:
          - not_null
          - accepted_values:
              values: ['primary_contact', 'primary_with_cc', 'cc_contact_only', 'name_only_contact', 'minimal_contact']
      
      - name: company_contact_rank
        description: Ranking within the company (1 = primary contact)
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "company_contact_rank >= 1"
      
      - name: is_primary_company_contact
        description: "Flag for primary contact (should match company_contact_rank = 1)"
        tests:
          - not_null
          # Test consistency between rank and flag
          - dbt_utils.expression_is_true:
              expression: "(company_contact_rank = 1 AND is_primary_company_contact = TRUE) OR (company_contact_rank > 1 AND is_primary_company_contact = FALSE)"
      
      - name: contact_data_quality
        description: Data quality assessment
        tests:
          - not_null
          - accepted_values:
              values: ['complete', 'partial', 'minimal']
      
      - name: source_customer_id
        description: Original customer ID for traceability
        tests:
          - not_null
